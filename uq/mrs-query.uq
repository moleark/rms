/** 根据供应商搜索联系人*/
QUERY SearchSupplierContact(_id ID Supplier)
returns ret (
    id bigint,
    no char(10),
    supplier ID Supplier,
    name char(50),
    firstName char(50),
    lastName char(50),
    gender char(5),
    salutation char(10),
    departmentName char(100),
    telephone char(50),
    mobile char(50) null,
    email char(50),
    fax char(20),
    zipCode char(20),
    wechatId char(50),
    addressString char(400),
    address ID Address,
    defaultContact ID SupplierContact,
    isValid smallint
) { 
    into ret select tabl.id, tabl.no, tabl.supplier, tabl.name, tabl.firstName,tabl.lastName, tabl.gender, tabl.salutation,tabl.departmentName
    ,tabl.telephone,tabl.mobile, tabl.email ,tabl.fax,tabl.zipCode ,tabl.wechatId ,tabl.addressString ,tabl.address
    ,tabl.defaultContact, tabl.isValid
    from (
    select  (case when s.defaultContact is null then w.id else 0 end) as num
            ,w.id, w.no, w.supplier, w.name, w.firstName,w.lastName, w.gender, w.salutation,w.departmentName
            ,w.telephone,w.mobile, w.email ,w.fax,w.zipCode ,w.wechatId ,w.addressString ,w.address
            ,s.defaultContact, w.isValid
    from    SupplierContact as w
            left join Supplier as s on w.id=s.defaultContact
    where   w.supplier = _id and w.isValid=1
    order by w.id
    ) as tabl
    order by tabl.num;
};


/** 搜索供应商*/
QUERY SearchSupplier(key char(100))
PAGE (
    id bigint start 0,
    no char(10) ,
    name char(200),
    abbreviation char(200),
    defaultContact ID SupplierContact
) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select w.id, w.no, w.name,w.abbreviation,w.defaultContact
    from    Supplier as w
    where   1=1 
            and ( w.name like key2 or w.no like key2 )
            and w.id > $pageStart and w.isValid = 1 
    order by w.id
    limit $pageSize;
};

/** 搜索品牌*/
QUERY SearchBrand(key char(100))
PAGE (
    id bigint start 0,
    no char(10) ,
    name char(50)
) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select w.id, w.no, w.name
    from    Brand as w
    where   1=1 
            and (key is null or ( w.no like key2 or w.name like key2))
            and w.id > $pageStart and w.isValid=1
    order by w.id
    limit $pageSize;
};

/** 搜索产品*/
QUERY SearchProduct(key char(100))
PAGE (
    id bigint start 0,
    no char(50) ,
    supplier ID Supplier,   --供应商编号
    brand ID Brand,        --品牌
    origin char(50),                        --供应商自编号
    description char(1000),           --产品英文名称
    descriptionC char(1000),
    createTime datetime,
    chemical ID Chemical,
    CAS char(20),
    purity char(80),
    molecularFomula char(200),
    molecularWeight char(30)
) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select w.id, w.no, w.supplier,w.brand,w.origin,w.description,w.descriptionC,w.createTime,p.chemical,p.CAS,p.purity,p.molecularFomula,p.molecularWeight
    from    Product as w
            left join ProductChemical as p on w.id=p.product
    where   ( w.description like key2 or w.descriptionC like key2 or p.CAS like key2)
            and w.id > $pageStart 
            and w.isTrue = 1  
    order by w.id
    limit $pageSize;
};

/** 搜索产品*/
QUERY SearchProductById(_id ID Product)
returns ret (
    id bigint,
    no char(50) ,
    supplier ID Supplier,   --供应商编号
    brand ID Brand,        --品牌
    origin char(50),                        --供应商自编号
    description char(1000),           --产品英文名称
    descriptionC char(1000),
    createTime datetime,
    chemical ID Chemical,
    CAS char(20),
    purity char(80),
    molecularFomula char(200),
    molecularWeight char(30)
) {

    into ret select  w.id, w.no, w.supplier,w.brand,w.origin,w.description,w.descriptionC,w.createTime,p.chemical,p.CAS,p.purity,p.molecularFomula,p.molecularWeight
    from    Product as w
            left join ProductChemical as p on w.id=p.product
    where   w.id=_id
            and w.isTrue = 1  
    order by w.id;
};

--获取产品包装
QUERY GetPack(_id ID Product)
returns ret (
    id bigint,
    product ID Product,
    radiox dec(12,2),                  --套
    radioy dec(12,4),                  --包装规格
    unit char(10),                     --单位
    type smallint
) {
    into ret select pp.id,p.id as product, pp.radiox, pp.radioy,pp.unit,pp.type
    from    Product as p 
            join Product.Pack as pp on p.id = pp.owner
    where   1=1 
            and p.id=_id
            and pp.isValid = 1 
    order by pp.id;
};

--查询待询价供应商  
QUERY SearchInquiryPending(key char(100))
PAGE (
    id bigint start 0,
    supplier ID Supplier not null         --供应商编号
) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select distinct s.id,p.supplier
    from    InquiryPending as p
            join Supplier as s on p.supplier=s.id
    where   (key is null or ( s.name like key2 or s.no like key2))
            and s.id > $pageStart 
    limit $pageSize;
};

--查询待询价包装   
QUERY SearchInquiryPendingBySupplier(_id ID Supplier)
returns ret (
    id bigint,
    user id [$user],
    supplier ID Supplier not null,          --供应商编号
    product ID Product not null,            --产品编号
    quantity int,                           --数量
    radiox dec(12,2),                       --套
    radioy dec(12,4),                       --包装规格
    unit char(10),                          --单位
    date datetime,
    CAS char(20),
    purity char(80)
) {

    into ret select p.id, p.user,p.supplier,p.product,p.quantity,p.radiox,p.radioy,p.unit, p.date,c.CAS,c.purity
    from    InquiryPending as p
            join Supplier as s on p.supplier=s.id
            join Product as t on p.product=t.id
            join ProductChemical as c on t.id=c.product
    where   p.supplier=_id
    order by p.id;
};

--添加待询价Pending
ACTION AddInquiryPending(
    supplier ID Supplier, 
    product ID Product,
    quantity int,                           --数量
    radiox dec(12,2),                       --套
    radioy dec(12,4),                       --包装规格
    unit char(10)                         --单位
){

    var pid ID;
    PENDING InquiryPending +(supplier:supplier,product:product,quantity:quantity,radiox:radiox,radioy:radioy,unit:unit) to pid;
};

--删除待询价Pending
ACTION DeleteInquiryPending(
    id bigint
) {
    Pending InquiryPending - at id;
};

--删除供应商待询价Pending
ACTION DeleteInquiryPendingBySupplier(
    _supplier ID Supplier
) {
    delete from InquiryPending where supplier=_supplier;
};


QUERY GetInquirySheet ver 1.0()
returns ret(
    id bigint,
    no char(30),
    description char(50),
    date datetime
) {
    into ret select st.id, st.no, st.discription as description, st.date
    from    [$sheet] as st 
    order by st.id desc;
};

--添加询价结果
ACTION AddInquiryResultHistory(
    product ID Product,
    quantity int,                       --数量
    radiox dec(12,2),                   --套
    radioy dec(12,4),                   --包装规格
    unit char(10),                      --单位
    listPrice dec(12,2),                --目录单价
    price dec(12,2),                    --结算单价
    currency ID Currency,               --结算币种
    isTaxIn smallint,                   --结算单价中是否已经包含税费；0：不包含；1：包含
    isTransFeeIn smallint,              --结算单价中是否已经包含税费；0：不包含；1：包含
    transFee dec(12,2),                 --运费
    transFeecurrency ID Currency,       --运费币种
    packingFee dec(12,2),               --包装费
    packingcurrency ID Currency,        --包装费币种
    otherFee dec(12,2),                 --其他费用
    customized smallint,                --产品是否需要定制；0：不需要；1：需要定制
    customizeUpto datetime,             --用于计算定制周期。产品需要定制时，用于计算定制周期，CustomizeUpto减去CreateDate为定制周期
    validUpto datetime,                 --报价有效期
    minArriveDate datetime,             --最短到货期
    maxArriveDate datetime,             --最长到货期
    invoiceType ID InvoiceType,         --发票类型
    vatRate dec(12,2),                  --增值税率
    tariffRate dec(12,2),               --关税税率
    packType smallint,                  --包装类型，分为两种：1.目录包装，2.非目录包装
    remarks char(1000),                 --备注
    coaFilePath char(1000),             --供应商所提供的COA文件路径
    msdsFilePath char(1000),            --供应商所提供的MSDS文件的上传路径
    quotationFilePath char(1000)
){
    history InquiryResultHistory
        set product = product, quantity = quantity, radiox = radiox, radioy = radioy, unit = unit, listPrice = listPrice, price = price,currency=currency,
            isTaxIn = isTaxIn, isTransFeeIn = isTransFeeIn, transFee = transFee, transFeecurrency = transFeecurrency,packingFee=packingFee,packingcurrency=packingcurrency,
            otherFee = otherFee,customized=customized,customizeUpto=customizeUpto,validUpto=validUpto,minArriveDate=minArriveDate,maxArriveDate=maxArriveDate,
            invoiceType=invoiceType,vatRate=vatRate,tariffRate=tariffRate,packType=packType,remarks=remarks,coaFilePath=coaFilePath,msdsFilePath=msdsFilePath,quotationFilePath=quotationFilePath;

    VAR packid ID;
    set packid=pp.id
    from  Product as p 
          join Product.Pack as pp on p.id = pp.owner
    where p.id=product
          and pp.radiox=radiox
          and pp.radioy=radioy
          and pp.unit=unit
    limit 1;

    if(packid is null){
        --新建包装
        VAR npackid ID;
        TUID Product.Pack OF product into npackid ID 1 set
            radiox=radiox,radioy=radioy,unit=unit,type=packType,isValid=1;

        --新建包装价格
        BOOK PackPrice at (Product, npackid) set price = price,currency=currency,
            isTaxIn = isTaxIn, isTransFeeIn = isTransFeeIn, transFee = transFee, transFeecurrency = transFeecurrency,packingFee=packingFee,packingcurrency=packingcurrency,
            otherFee = otherFee,customized=customized,customizeUpto=customizeUpto,validUpto=validUpto,minArriveDate=minArriveDate,maxArriveDate=maxArriveDate,
            invoiceType=invoiceType,vatRate=vatRate,tariffRate=tariffRate;       
    }else{
        --更新包装价格
         BOOK PackPrice at (Product, packid) set price = price,currency=currency,
            isTaxIn = isTaxIn, isTransFeeIn = isTransFeeIn, transFee = transFee, transFeecurrency = transFeecurrency,packingFee=packingFee,packingcurrency=packingcurrency,
            otherFee = otherFee,customized=customized,customizeUpto=customizeUpto,validUpto=validUpto,minArriveDate=minArriveDate,maxArriveDate=maxArriveDate,
            invoiceType=invoiceType,vatRate=vatRate,tariffRate=tariffRate;
    };
};