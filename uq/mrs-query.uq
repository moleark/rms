/** 根据供应商搜索联系人*/
QUERY SearchSupplierContact(_id ID Supplier)
returns ret (
    id bigint,
    no char(10),
    supplier ID Supplier,
    name char(50),
    firstName char(50),
    lastName char(50),
    gender char(5),
    salutation char(10),
    position char(50),
    departmentName char(100),
    telephone char(60),
    mobile char(50) null,
    email char(60),
    fax char(60),
    zipCode char(20),
    wechatId char(50),
    addressString char(400),
    address ID Address,
    defaultContact ID SupplierContact,  --订单、默认联系人
    financeContact ID SupplierContact,  --财务联系人
    inquiryContact ID SupplierContact,   --询价联系人
    isValid smallint
) { 
    into ret select tabl.id, tabl.no, tabl.supplier, tabl.name, tabl.firstName,tabl.lastName, tabl.gender, tabl.salutation, tabl.position, tabl.departmentName
    ,tabl.telephone,tabl.mobile, tabl.email ,tabl.fax,tabl.zipCode ,tabl.wechatId ,tabl.addressString ,tabl.address
    ,tabl.defaultContact, tabl.financeContact, tabl.inquiryContact , tabl.isValid
    from (
    select  (case when s.defaultContact is null then (case when s1.financeContact is null then (case when s2.inquiryContact is null then w.id else 0 end) else -1 end) else -2 end) as num
            ,w.id, w.no, w.supplier, w.name, w.firstName,w.lastName, w.gender, w.salutation, w.position, w.departmentName
            ,w.telephone,w.mobile, w.email ,w.fax,w.zipCode ,w.wechatId ,w.addressString ,w.address
            ,s.defaultContact, s1.financeContact, s2.inquiryContact, w.isValid
    from    SupplierContact as w
            left join Supplier as s on w.id=s.defaultContact
            left join Supplier as s1 on w.id=s1.financeContact
            left join Supplier as s2 on w.id=s2.inquiryContact
    where   w.supplier = _id and w.isValid=1
    order by w.id
    ) as tabl
    order by tabl.num;
};


/** 搜索供应商*/
QUERY SearchSupplier ver 3.0(key char(100))
PAGE (
    id bigint start 0,
    no char(10) ,
    name char(200),
    abbreviation char(200),
    defaultContact ID SupplierContact,  --订单、默认联系人
    financeContact ID SupplierContact,  --财务联系人
    inquiryContact ID SupplierContact,   --询价联系人
    webSite char(500),                  --供应商网址1
    addressString char(400),
    address ID Address,
    productionAddress char(500),        --生产厂址
    profile  text,                      --企业简介(供应商信息概况)
    taxNo char(50),
    businessArea char(10)               --业务区域
) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select w.id, w.no, w.name,w.abbreviation,w.defaultContact,w.financeContact, w.inquiryContact, w.webSite,w.addressString,w.address,w.productionAddress,w.profile,w.taxNo,w.businessArea
    from    Supplier as w
    where   ( w.name like key2 or w.no like key2 )
            and w.id > $pageStart and w.isValid = 1 
    order by w.id
    limit $pageSize;
};

/** 根据供应商搜索银行信息*/
QUERY SearchSupplierBankAccount(_id ID Supplier)
returns ret (
    id bigint,
    supplier ID Supplier,
    bankAddress char(500),              --供应商银行地址
    bankSWIFT char(100),                --供应商开户行SWIFT/BIC
    bankIBAN char(100),                 --供应商开户行IBAN
    bankRTN char(20),                   --供应商开户行的RTN   
    bank char(100),                     --供应商开户银行
    accountNo char(60),                 --供应商在开户银行的帐号 
    accountName char(100),              --受益人
    usageType smallint                  --用途（0 开户行 1 中转行）
) { 
    into ret select b.id,sb.supplier,b.bankAddress,b.bankSWIFT,b.bankIBAN,b.bankRTN,b.bank,b.accountNo,b.accountName,b.usageType
    from    SupplierBankAccount as sb 
            join BankAccount as b on sb.bankAccount=b.id
    where   sb.supplier = _id
    order by b.id;
};

/** 搜索品牌*/
QUERY SearchBrand(key char(100))
PAGE (
    id bigint start 0,
    no char(10) ,
    name char(50)
) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select w.id, w.no, w.name
    from    RsBrand as w
    where   1=1 
            and (key is null or ( w.no like key2 or w.name like key2))
            and w.id > $pageStart and w.isValid=1
    order by w.id
    limit $pageSize;
};

/** 搜索产品*/
QUERY SearchProduct(key char(100),pickType char(100))
PAGE (
    id bigint start 0,
    no char(50) ,
    supplier ID Supplier,   --供应商编号
    brand ID RsBrand,        --品牌
    origin char(50),                        --供应商自编号
    description char(1000),           --产品英文名称
    descriptionC char(1000),
    createTime datetime,
    chemical ID Chemical,
    CAS char(20),
    purity char(80),
    molecularFomula char(200),
    molecularWeight char(30),
    chinaHSCode char(50),
    inquiryContact ID SupplierContact --询价联系人
) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select w.id, w.no, w.supplier,w.brand,w.origin,w.description,w.descriptionC,w.createTime,p.chemical,p.CAS,p.purity,p.molecularFomula,p.molecularWeight
    , w.chinaHSCode,case when s.inquiryContact is null then s.defaultContact else s.inquiryContact end as inquiryContact
    from    Product as w
            left join RsProductChemical as p on w.id=p.product
            left join Supplier as s on w.supplier=s.id
    where   ((pickType='供应商' and s.name  like key2 ) 
            or (pickType='CAS' and p.CAS  like key2 )
            or (pickType='中英文名称' and (w.description like key2 or w.descriptionC like key2) )
            or (pickType='供应商自编号' and (w.origin like key2) )
            or (pickType is null and ( w.description like key2 or w.descriptionC like key2 or p.CAS like key2  or w.origin like key2)))
            and w.id > $pageStart 
            and w.isTrue = 1  
    order by w.id
    limit $pageSize;
};

/** 搜索产品*/
QUERY SearchProductById(_id ID Product)
returns ret (
    id bigint,
    no char(50) ,
    supplier ID Supplier,   --供应商编号
    brand ID RsBrand,        --品牌
    origin char(50),                        --供应商自编号
    description char(1000),           --产品英文名称
    descriptionC char(1000),
    createTime datetime,
    chemical ID Chemical,
    CAS char(20),
    purity char(80),
    molecularFomula char(200),
    molecularWeight char(30),
    chinaHSCode char(50)
) {

    into ret select  w.id, w.no, w.supplier,w.brand,w.origin,w.description,w.descriptionC,w.createTime,p.chemical,p.CAS,p.purity,p.molecularFomula,p.molecularWeight,w.chinaHSCode
    from    Product as w
            left join RsProductChemical as p on w.id=p.product
    where   w.id=_id
            and w.isTrue = 1  
    order by w.id;
};

--获取产品包装
QUERY GetPack(_id ID Product)
returns ret (
    id bigint,
    product ID Product,
    radiox dec(12,2),                   --套
    radioy dec(12,4),                   --包装规格
    unit ID PackType,                   --单位
    type smallint,                      --包装类型
    listPrice dec(12,2),                --目录单价
    price dec(12,2),                    --结算单价
    currency ID Currency,               --结算币种
    isTaxIn smallint,                   --结算单价中是否已经包含税费；0：不包含；1：包含
    isTransFeeIn smallint,              --结算单价中是否已经包含税费；0：不包含；1：包含
    transFee dec(12,2),                 --运费
    transFeecurrency ID Currency,       --运费币种
    packingFee dec(12,2),               --包装费
    packingcurrency ID Currency,        --包装费币种
    otherFee dec(12,2),                 --其他费用
    otherFeecurrency ID Currency,       --其他费用币种
    customizeUpto datetime,             --用于计算定制周期。产品需要定制时，用于计算定制周期，CustomizeUpto减去CreateDate为定制周期
    validUpto datetime,                 --报价有效期
    minArriveDate datetime,             --最短到货期
    maxArriveDate datetime,             --最长到货期
    invoiceType smallint,         --发票类型
    vatRate dec(12,3),                  --增值税率
    tariffRate dec(12,4),               --关税税率
    remark text                         --报价备注
) {
    into ret select pp.id,p.id as product, pp.radiox, pp.radioy,pp.unit,pp.type
                    ,pr.listPrice,pr.price,pr.currency,pr.isTaxIn,pr.isTransFeeIn,pr.transFee
                    ,pr.transFeecurrency,pr.packingFee,pr.packingcurrency,pr.otherFee
                    ,pr.otherFeecurrency,pr.customizeUpto,pr.validUpto,pr.minArriveDate
                    ,pr.maxArriveDate,pr.invoiceType,v.description as vatRate,pr.tariffRate,pr.remark
    from    Product as p 
            join Product.Pack as pp on p.id = pp.owner
            left join PackPrice as pr on pp.id=pr.pack and p.id=pr.product
            left join VatRate as v on pr.vatRate=v.id
    where   p.id=_id
            and pp.isValid = 1 
    order by pp.id;
};


--查询待询出供应商  
QUERY SearchNewInquiryPending(key char(100))
PAGE (
    id bigint start 0,
    supplier ID Supplier not null,        --供应商编号
    user ID [$user], 
    date datetime
) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select p.id,p.supplier,p.user,p.date
    from    InquiryPending as p
            join Supplier as s on p.supplier=s.id
    where   (key is null or ( s.name like key2 or s.no like key2))
            and p.status=0
            and p.id > $pageStart
    order  by p.id 
    limit $pageSize;
};


--查询已询出供应商  
QUERY SearchInquiryPending  ver 1.0 (key char(100))
PAGE (
    id bigint start 0,
    supplier ID Supplier,        --供应商编号
    contact ID SupplierContact,
    contactName char(50),              --供应商联系人姓名
    contactSalutation char(10),
    contactDepartmentName char(100),
    contactTelephone char(50),
    contactMobile char(50),
    contactEmail char(50),
    contactfax char(20),
    way smallint,                      --询价方式：2：电话询价；3：传真询价；1：Email询价
    inquiryUser ID [$user],                 --询价人
    inquiryDate datetime,                  --询出时间
    user ID [$user], 
    date datetime
) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select p.id,p.supplier,p.contact,p.contactName,p.contactSalutation,p.contactDepartmentName,p.contactTelephone,p.contactMobile,p.contactEmail,p.contactfax,p.way,p.inquiryUser,p.inquiryDate,p.user,p.date
    from    InquiryPending as p
            join Supplier as s on p.supplier=s.id
    where   (key is null or ( s.name like key2 or s.no like key2))
            and p.status=1
            and p.id > $pageStart 
    order  by p.id
    limit $pageSize;
};

--查询待询价包装   
QUERY SearchInquiryPendingByID ver 1.0(_id ID)
returns ret (
    id bigint,
    user id [$user],
    date datetime,
    supplier ID Supplier,          --供应商编号
    status smallint default 0,              --询价状态（0 未询出 1 已询出）
    contact ID SupplierContact,        --供应商默认联系人
    contactName char(50) null,              --供应商联系人姓名
    contactSalutation char(10),
    contactDepartmentName char(100),
    contactTelephone char(50),
    contactMobile char(50),
    contactEmail char(50),
    contactfax char(20),
    way smallint null,                      --询价方式：2：电话询价；3：传真询价；1：Email询价
    inquiryUser ID [$user],                 --询价人
    inquiryDate datetime                    --询出时间
) {

    into ret select p.id,p.user,p.date, p.supplier,p.status,p.contact,p.contactName,p.contactSalutation,p.contactDepartmentName,p.contactTelephone,p.contactMobile, p.contactEmail,p.contactfax,p.way,p.inquiryUser,p.inquiryDate
    from    InquiryPending as p
    where   p.id=_id
    order by p.id;
};


--查询待询价包装   
QUERY SearchInquiryPendingBySupplier ver 2.0(_id ID)
returns ret (
    id bigint,
    inquiryPackage ID InquiryPackage,
    inquiryPending ID,
    user id [$user],
    createDate datetime,
    supplier ID Supplier not null,          --供应商编号
    product ID Product not null,            --产品编号
    quantity int,                           --数量
    radiox dec(12,2),                       --套
    radioy dec(12,4),                       --包装规格
    unit ID PackType,                          --单位
    date datetime,
    CAS char(20),
    purity char(80),
    jsonStr char(1000),
    inquiryRemarks char(1000)
) {

    into ret select p.id,i.inquiryPackage,i.inquiryPending, i.user,i.createDate,p.supplier,k.product,k.quantity,k.radiox,k.radioy,k.unit, p.date,c.CAS,k.purity,i.jsonStr,i.remarks as inquiryRemarks
    from    InquiryPending as p
            join Supplier as s on p.supplier=s.id
            join InquiryPendingItem as i on p.id=i.inquiryPending
            join InquiryPackage as k on i.inquiryPackage=k.id
            join Product as t on k.product=t.id
            join RsProductChemical as c on t.id=c.product
    where   p.id=_id
    order by p.id;
};

--添加待询价Pending
ACTION AddInquiryPending(
    supplier ID Supplier, 
    product ID Product,
    quantity int,                           --数量
    radiox dec(12,2),                       --套
    radioy dec(12,4),                       --包装规格
    unit ID PackType,                          --单位
    purity char(80),                        --询价纯度 
    remarks char(1000)                      --备注
){
    var pid ID;
    set     pid=i.id
    from    InquiryPending as i
    where   i.supplier=supplier
            and i.status=0
    order by i.date desc;

    --新建询价产品包装
    var packid ID;
    TUID InquiryPackage into packid set
        supplier=supplier,product=product,quantity=quantity,radiox=radiox,radioy=radioy,unit=unit,purity=purity;  

    if(pid is null){
        PENDING InquiryPending +(supplier:supplier,status:0,contact:null,contactName:null,contactSalutation:null,contactDepartmentName:null,contactTelephone:null,contactMobile:null,contactEmail:null,contactfax:null,way:null,inquiryUser:null,inquiryDate:null) to pid;
    }

    --更新pending的map
    BOOK InquiryPendingItem at (pid, packid) set user = $user,createDate=now(),remarks=remarks;
};

--删除待询出Pending
ACTION DeleteInquiryPending(
    id bigint
) {

    foreach (var a ID InquiryPackage
        of select a.id as a
        from    InquiryPackage as a
                join InquiryPendingItem as b on a.id=b.inquiryPackage
        where   b.inquiryPending=id)
    {
        delete from InquiryPackage where id=a;
    };

    delete from InquiryPendingItem where inquiryPending=id;
    Pending InquiryPending - at id;
};

--删除待询出Pending的包装
ACTION DeleteInquiryPackage(
    id bigint,
    pid bigint
) {
    delete from InquiryPendingItem where inquiryPending=id and inquiryPackage=pid;
    delete from InquiryPackage where id=pid;
};

--将询价任务更新为已询出状态
ACTION UpdateInquiryPending(
    id bigint,
    supplier bigint,
    way smallint
) {

    var contact ID;        --供应商默认联系人
    var contactName char(50);             --供应商联系人姓名
    var contactSalutation char(10);
    var contactDepartmentName char(100);
    var contactTelephone char(60);
    var contactMobile char(50);
    var contactEmail char(60);
    var contactfax char(60);
    set contact=case when c.id is null then c1.id else c.id end,
        contactName=case when c.id is null then c1.name else c.name end,
        contactSalutation=case when c.id is null then c1.salutation else c.salutation end,
        contactDepartmentName=case when c.id is null then c1.departmentName else c.departmentName end,
        contactTelephone=case when c.id is null then c1.telephone else c.telephone end,
        contactMobile=case when c.id is null then c1.mobile else c.mobile end,
        contactEmail=case when c.id is null then c1.email else c.email end,
        contactfax=case when c.id is null then c1.fax else c.fax end
    from  Supplier as s
          left join SupplierContact as c on s.inquiryContact = c.id
          left join SupplierContact as c1 on s.defaultContact = c1.id
    where s.id=supplier
    limit 1;

    if(contact>0){
        PENDING InquiryPending =(way:way,status:1,contact:contact,contactName:contactName,contactSalutation:contactSalutation,contactDepartmentName:contactDepartmentName,
        contactTelephone:contactTelephone,contactMobile:contactMobile,contactEmail:contactEmail,contactfax:contactfax,inquiryUser:$user,inquiryDate:now()) at id;
    }
};


QUERY GetInquirySheet ver 1.0(key char(100))
PAGE (
    sheet bigint start 0,
    supplier ID Supplier,                   --供应商编号
    contactName char(50) null,              --供应商联系人姓名
    inquiryUser ID [$user],                 --询价人
    startDate datetime,                     --开始时间   
    inquiryDate datetime,                   --询出时间 
    date  datetime,                         --结束时间 
    way smallint not null                   --询价方式：2：电话询价；3：传真询价；1：Email询价   
) {

    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select st.sheet,st.supplier, st.contactName, st.inquiryUser,st.startDate,st.inquiryDate,st.date, st.way
    from   InquiryHistory as st 
            join Supplier as s on st.supplier=s.id
    where   (key is null or ( s.name like key2 or s.no like key2))
            and st.sheet > $pageStart 
    order by st.sheet desc
    limit $pageSize;
};

--添加询价结果
ACTION AddPackagePrice ver 1.0(
    product ID Product,                 --产品
    quantity int,                       --数量
    radiox dec(12,2),                   --套
    radioy dec(12,4),                   --包装规格
    unit ID PackType,                   --单位
    listPrice dec(12,2),                --目录单价
    price dec(12,2),                    --结算单价
    currency ID Currency,               --结算币种
    isTaxIn smallint,                   --结算单价中是否已经包含税费；0：不包含；1：包含
    isTransFeeIn smallint,              --结算单价中是否已经包含运费；0：不包含；1：包含
    transFee dec(12,2),                 --运费
    transFeecurrency ID Currency,       --运费币种
    packingFee dec(12,2),               --包装费
    packingcurrency ID Currency,        --包装费币种
    otherFee dec(12,2),                 --其他费用
    otherFeecurrency ID Currency,       --其他费用币种
    customizeUpto datetime,             --用于计算定制周期。产品需要定制时，用于计算定制周期，CustomizeUpto减去CreateDate为定制周期
    validUpto datetime,                 --报价有效期
    minArriveDate datetime,             --最短到货期
    maxArriveDate datetime,             --最长到货期
    invoiceType smallint,         --发票类型
    vatRate ID VatRate,                 --增值税率
    tariffRate dec(12,4),               --关税税率
    packType smallint,                  --包装类型，分为两种：1.目录包装，2.非目录包装
    remarks char(1000),                 --备注
    coaFilePath char(1000),             --供应商所提供的COA文件路径
    msdsFilePath char(1000),            --供应商所提供的MSDS文件的上传路径
    quotationFilePath char(1000)
){

    VAR packid ID;
    set packid=pp.id
    from  Product as p 
          join Product.Pack as pp on p.id = pp.owner
    where p.id=product
          and pp.radiox=radiox
          and pp.radioy=radioy
          and pp.unit=unit
    limit 1;

    if(packid is null){
        --新建包装
        TUID Product.Pack OF product into packid set
            radiox=radiox,radioy=radioy,unit=unit,type=packType,isValid=1;  
    }
    --更新包装价格
    BOOK PackPrice at (Product, packid) set listPrice=listPrice, price = price,currency=currency,
        isTaxIn = isTaxIn, isTransFeeIn = isTransFeeIn, transFee = transFee, transFeecurrency = transFeecurrency,packingFee=packingFee,packingcurrency=packingcurrency,
        otherFee = otherFee,otherFeecurrency=otherFeecurrency,customizeUpto=customizeUpto,validUpto=validUpto,minArriveDate=minArriveDate,maxArriveDate=maxArriveDate,
        invoiceType=invoiceType,vatRate=vatRate,tariffRate=tariffRate,remark=remarks;
};

--新建包装
ACTION AddPackage ver 3.0(
    product ID Product,                 --产品
    quantity int,                       --数量
    radiox dec(12,2),                   --套
    radioy dec(12,4),                   --包装规格
    unit ID PackType,                   --单位
    listPrice dec(12,2),                --目录单价
    price dec(12,2),                    --结算单价
    currency ID Currency,               --结算币种
    isTaxIn smallint,                   --结算单价中是否已经包含税费；0：不包含；1：包含
    isTransFeeIn smallint,              --结算单价中是否已经包含运费；0：不包含；1：包含
    transFee dec(12,2),                 --运费
    transFeecurrency ID Currency,       --运费币种
    packingFee dec(12,2),               --包装费
    packingcurrency ID Currency,        --包装费币种
    otherFee dec(12,2),                 --其他费用
    otherFeecurrency ID Currency,       --其他费用币种
    customizeUpto datetime,             --用于计算定制周期。产品需要定制时，用于计算定制周期，CustomizeUpto减去CreateDate为定制周期
    validUpto datetime,                 --报价有效期
    minArriveDate datetime,             --最短到货期
    maxArriveDate datetime,             --最长到货期
    invoiceType smallint,         --发票类型
    vatRate ID VatRate,                 --增值税率
    tariffRate dec(12,4),               --关税税率
    type smallint,                      --包装类型，分为两种：1.目录包装，2.非目录包装
    purity char(80),                    --报价纯度
    remark text                         --报价备注
){
    VAR packid ID;
    if(packid is null){
        --新建包装
        TUID Product.Pack OF product into packid set
            radiox=radiox,radioy=radioy,unit=unit,type=type,isValid=1;  
    }
    --更新包装价格
    BOOK PackPrice at (Product, packid) set listPrice=listPrice, price = price,currency=currency,
        isTaxIn = isTaxIn, isTransFeeIn = isTransFeeIn, transFee = transFee, transFeecurrency = transFeecurrency,packingFee=packingFee,packingcurrency=packingcurrency,
        otherFee = otherFee,otherFeecurrency=otherFeecurrency,customizeUpto=customizeUpto,validUpto=validUpto,minArriveDate=minArriveDate,maxArriveDate=maxArriveDate,
        invoiceType=invoiceType,vatRate=vatRate,tariffRate=tariffRate,remark=remark;

    VAR supplierid ID;
    set supplierid=p.supplier
    from  Product as p 
    where p.id=product
    limit 1; 

    var ppurity char(80);
    set ppurity=p.purity
    from  RsProductChemical as p 
    where p.product=product
    limit 1;

    
    var contact ID;        --供应商默认联系人
    var contactName char(50);             --供应商联系人姓名
    var contactSalutation char(10);
    var contactDepartmentName char(100);
    var contactTelephone char(60);
    var contactMobile char(50);
    var contactEmail char(60);
    var contactfax char(60);
    set contact=case when c.id is null then c1.id else c.id end,
        contactName=case when c.id is null then c1.name else c.name end,
        contactSalutation=case when c.id is null then c1.salutation else c.salutation end,
        contactDepartmentName=case when c.id is null then c1.departmentName else c.departmentName end,
        contactTelephone=case when c.id is null then c1.telephone else c.telephone end,
        contactMobile=case when c.id is null then c1.mobile else c.mobile end,
        contactEmail=case when c.id is null then c1.email else c.email end,
        contactfax=case when c.id is null then c1.fax else c.fax end
    from  Supplier as s
          left join SupplierContact as c on s.inquiryContact = c.id
          left join SupplierContact as c1 on s.defaultContact = c1.id
    where s.id=supplierid
    limit 1;   

    --新建询价单及询价历史
    var sheetId id;
    sheet InquirySheet into sheetId set supplier = supplierid, contact = contact, contactName = contactName, contactSalutation = contactSalutation, contactDepartmentName = contactDepartmentName
            , contactTelephone = contactTelephone, contactMobile = contactMobile,contactEmail = contactEmail, contactfax = contactfax
            , inquiryUser = $user, user=$user,createDate = now(),inquiryDate=now(),way=1;
    sheet InquirySheet of sheetId arr inquiryitems
        add no=null,product=product, inquiryQuantity=quantity, inquiryRadiox=radiox, inquiryRadioy=radioy, inquiryUnit=unit
            , itemuser=$user, itemcreateDate=now(), quantity=quantity, radiox=radiox, radioy=radioy, unit=unit
            , listPrice=0, price=price, currency=currency, isTaxIn=isTaxIn, isTransFeeIn=isTransFeeIn
            , transFee=transFee, transFeecurrency=transFeecurrency, packingFee=packingFee, packingcurrency=packingcurrency
            , otherFee=otherFee, otherFeecurrency=otherFeecurrency, customizeUpto=customizeUpto, validUpto=validUpto
            , minArriveDate=minArriveDate, maxArriveDate=maxArriveDate, invoiceType=invoiceType, vatRate=vatRate, tariffRate=tariffRate
            , packType=type, coaFilePath=null, msdsFilePath=null, quotationFilePath=null, inquiryRemarks=remark,remarks='手动添加',result=1
            , inquirypurity=ppurity,purity=purity,notProvidedReason=null,isUsed=1;
};

--查询有效增值税率  
QUERY SearchVatRate()
returns ret (
    id bigint,
    description  dec(12,3)         --增值税率
) {

    into ret select v.id,v.description
    from    VatRate as v
    where   v.isValid=1
    order by v.id;
};

/** 根据产品搜索产品性质*/
QUERY SearchProductProperty(_id ID Product)
returns ret (
    id bigint,
    product ID Product,
    useFor text,                           --产品用途
    remark text,                           --产品备注
    isspot smallint,                       --是否现货产品（1 表示是现货产品，0表示定制产品）
    storageRange ID StorageRange,          --存储条件
    expiry char(40),                       --保质期
    expiryUnit char(10),                   --保质期单位
    restrictMark ID RestrictMark,          --限制性标记
    refractiveIndex char(20),              --折射率
    opticalRotation char(20),              --旋光度
    flashPoint char(200),                  --闪点
    meltingPoint char(200),                --熔点
    boilingPoint char(200),                --沸点
    character char(1000),                  --性状
    chroma char(100),                      --色度
    density char(100),                     --密度
    waterContent char(50)                  --含水量
) { 
    into ret select p.id,p.product, p.useFor, p.remark, p.isspot, p.storageRange, p.expiry, p.expiryUnit, p.restrictMark, p.refractiveIndex, p.opticalRotation, p.flashPoint, p.meltingPoint, p.boilingPoint, p.character, p.chroma, p.density, p.waterContent
    from    ProductProperty as p
    where   p.product = _id
    order by p.id;
};

--保存询价结果
ACTION AddInquiryResult ver 4.0(
    id bigint,
    supplier ID Supplier,                   --供应商编号
    contact ID SupplierContact,             --供应商默认联系人
    contactName char(50),              --供应商联系人姓名
    contactSalutation char(10),
    contactDepartmentName char(100),
    contactTelephone char(50),
    contactMobile char(50),
    contactEmail char(50),
    contactfax char(20),
    way smallint not null,                  --询价方式：2：电话询价；3：传真询价；1：Email询价
    user ID [$user],                        --创建人
    createDate datetime,                    --创建时间
    inquiryUser ID [$user],                 --询价人
    inquiryDate datetime,                    --询出时间
    Arr items(
        no char(50),                        --老询价结果编号
        product ID Product,                 --询价产品编号
        inquiryQuantity int,                --询价数量
        inquiryRadiox dec(12,2),            --询价套
        inquiryRadioy dec(12,4),            --询价包装规格
        inquiryUnit ID PackType,            --询价单位  
        inquirypurity char(80),             --询价纯度
        itemuser ID [$user],                --创建人
        itemcreateDate datetime,            --创建时间
        quantity int,                       --反馈数量
        radiox dec(12,2),                   --反馈套
        radioy dec(12,4),                   --反馈包装规格
        unit ID PackType,                      --反馈单位
        purity char(80),                    --反馈纯度
        listPrice dec(12,2),                --目录单价
        price dec(12,2),                    --结算单价
        currency ID Currency,               --结算币种
        isTaxIn smallint,                   --结算单价中是否已经包含税费；0：不包含；1：包含
        isTransFeeIn smallint,              --结算单价中是否已经包含税费；0：不包含；1：包含
        transFee dec(12,2),                 --运费
        transFeecurrency ID Currency,       --运费币种
        packingFee dec(12,2),               --包装费
        packingcurrency ID Currency,        --包装费币种
        otherFee dec(12,2),                 --其他费用
        otherFeecurrency ID Currency,       --其他费用币种
        customizeUpto datetime,             --用于计算定制周期。产品需要定制时，用于计算定制周期，CustomizeUpto减去CreateDate为定制周期
        validUpto datetime,                 --报价有效期
        minArriveDate datetime,             --最短到货期
        maxArriveDate datetime,             --最长到货期
        invoiceType smallint,         --发票类型
        vatRate ID VatRate,                 --增值税率
        tariffRate dec(12,4),               --关税税率
        packType smallint,                  --包装类型，分为两种：1.目录包装，2.非目录包装
        coaFilePath char(1000),             --供应商所提供的COA文件路径
        msdsFilePath char(1000),            --供应商所提供的MSDS文件的上传路径
        quotationFilePath char(1000),       --供应商提供的报价单的上传路径
        remarks char(1000),                 --备注：资源部新建的询价单需要国际部完成询价时，填写的询价要求
        inquiryRemarks char(1000),          --报价备注
        result smallint,                    --询价结果（0:不可供；1：可供）
        notProvidedReason ID NotProvidedReason, --不可供原因
        isUsed smallint,                    --价格是否同步到包装上（0：不使用 1：使用）
    ),
){
    --新建询价单及询价历史
    var sheetId id;
    sheet InquirySheet into sheetId set supplier = supplier, contact = contact, contactName = contactName, contactSalutation = contactSalutation, contactDepartmentName = contactDepartmentName
            , contactTelephone = contactTelephone, contactMobile = contactMobile,contactEmail = contactEmail, contactfax = contactfax
            , inquiryUser = inquiryUser, user=user,createDate = createDate,inquiryDate=inquiryDate,way=way;
    foreach items {
        sheet InquirySheet of sheetId arr inquiryitems
            add no=null,product=product, inquiryQuantity=inquiryQuantity, inquiryRadiox=inquiryRadiox, inquiryRadioy=inquiryRadioy, inquiryUnit=inquiryUnit
                , itemuser=itemuser, itemcreateDate=itemcreateDate, quantity=quantity, radiox=radiox, radioy=radioy, unit=unit
                , listPrice=listPrice, price=price, currency=currency, isTaxIn=isTaxIn, isTransFeeIn=isTransFeeIn
                , transFee=transFee, transFeecurrency=transFeecurrency, packingFee=packingFee, packingcurrency=packingcurrency
                , otherFee=otherFee, otherFeecurrency=otherFeecurrency, customizeUpto=customizeUpto, validUpto=validUpto
                , minArriveDate=minArriveDate, maxArriveDate=maxArriveDate, invoiceType=invoiceType, vatRate=vatRate, tariffRate=tariffRate
                , packType=packType, coaFilePath=coaFilePath, msdsFilePath=msdsFilePath, quotationFilePath=quotationFilePath, inquiryRemarks=inquiryRemarks,remarks=remarks,result=result
                , inquirypurity=inquirypurity,purity=purity,notProvidedReason=notProvidedReason,isUsed=isUsed;
    }
    if(sheetId>0){
        
    foreach (var a ID InquiryPackage
        of select a.id as a
        from    InquiryPackage as a
                join InquiryPendingItem as b on a.id=b.inquiryPackage
        where   b.inquiryPending=id)
        {
            delete from InquiryPackage where id=a;
        };

        delete from InquiryPendingItem where inquiryPending=id;
        Pending InquiryPending - at id;
    }
};