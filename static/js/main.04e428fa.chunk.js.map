{"version":3,"sources":["ui/main.tsx","CBase.ts","information/VHome.tsx","information/CHome.tsx","information/supplier/VSupplier.tsx","information/supplier/VSupplierList.tsx","information/supplier/VSupplierDetail.tsx","information/supplier/VPickSupplier.tsx","information/supplier/CSupplier.tsx","tools/inputValidations.ts","information/supplierContact/VSupplierContact.tsx","information/supplierContact/VSupplierContactDetail.tsx","configuration.ts","tvs/index.tsx","information/supplierContact/VAddress.tsx","information/supplierContact/CAddress.tsx","information/supplierContact/CSupplierContact.tsx","information/product/VProduct.tsx","information/product/VProductList.tsx","information/product/CProduct.tsx","CApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["color","selected","VMain","render","param","controller","cHome","cProduct","faceTabs","name","label","icon","content","tab","notify","undefined","onShown","loadList","map","v","caption","TabCaptionComponent","header","tabs","this","openPage","VPage","CUqBase","_cApp","_uqs","CBase","CSub","VHome","page","cApp","cSupplier","onNewSupplier","searchSupplierByKey","right","className","size","onSearch","key","placeholder","onClick","style","textAlign","headerClassName","toSupplierList","View","CHome","renderRootList","renderView","start","openVPage","schema","type","required","VSupplier","form","supplierData","uiSchema","items","id","visible","no","widget","abbreviation","isValid","defaultValue","submit","onFormButtonClick","context","a","saveSupplierData","data","onSavesupplierData","buttonClick","footer","descriptionData","_","clone","ref","formData","onButtonClick","fieldLabelSize","VSupplierList","renderRootCategory","item","parent","onEditSupplier","createTime","onSupplierSelected","observer","suppliers","none","VSupplierDetail","supplier","firstSupplierContact","supplierContacts","getSupplierContact","showCreateSupplierContact","cSupplierContact","renderContact","index","delSupplierContact","showEditSupplierContact","showSupplierContactDetail","gender","mobile","defaultContact","fa_text","fa_gender","left","rowTop","date","child","VPickSupplier","onScrollBottom","renderItem","more","model","returnSupplier","closePage","PageSupplier","searchQuery","searchSupplier","firstSize","pageSize","pageStart","ret","PageItems","CSupplier","uqs","rms","SearchSupplier","first","Date","now","Supplier","save","description","SearchSupplierContact","query","_id","contact","returnCall","observable","telephoneValidation","value","test","mobileValidation","emailValidation","faxValidation","addressDetailValidation","length","zipCodeValidation","departmentNameValidation","salutationValidation","nameValidation","VSupplierContact","gradeContent","boxId","tv","values","list","title","firstName","rules","lastName","salutation","departmentName","telephone","wechatId","email","fax","address","pickId","pickAddress","Templet","addressValue","country","province","city","county","chineseName","addressString","zipCode","isDefault","onSaveSupplierContact","saveSupplierContact","requiredFlag","VSupplierContactDetail","supplierContact","supplierContactData","appConfig","appName","version","tvs","oem","GLOABLE","VAddress","provinceId","cityId","countyId","backLevel","provinces","renderPCC","onProvinceClick","pcc","border","marginRight","marginBottom","getProvinceCities","cities","len","onCityClick","openPageElement","saveAddress","getCityCounties","counties","onCountyClick","getCountryProvince","CAddress","countryId","common","GetCountryProvinces","table","GetProvinceCities","GetCityCounties","Address","newAddress","addressId","PageSupplierContact","searchSupplierContact","CSupplierContact","searchSupplierContactByKey","pageSupplierContact","cAddress","newC","call","parrm","SupplierContact","result","sid","showSupplierContact","VProduct","productData","pickSupplier","obj","origin","descriptionC","isTrue","saveProductData","onSaveProductData","VProductList","onEditProduct","products","onNewProduct","searchProductByKey","PageProduct","searchProduct","CProduct","SearchProduct","product","Product","CApp","topKey","promises","push","Promise","all","showMain","nav","initTabName","user","CAppBase","setSettings","App","onLogined","notLogined","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04e428fa.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva';\r\nimport { CApp } from '../CApp';\r\n\r\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\r\n\r\nexport class VMain extends VPage<CApp> {\r\n    async open(param?: any) {\r\n        this.openPage(this.render);\r\n    }\r\n    render = (param?: any): JSX.Element => {\r\n        let { cHome, cProduct } = this.controller;\r\n        let faceTabs = [\r\n            { name: 'supplier', label: '供应商', icon: 'print', content: cHome.tab, notify: undefined },\r\n            { name: 'product', label: '产品', icon: 'check-square-o', content: cProduct.tab, onShown: cProduct.loadList }\r\n        ].map(v => {\r\n            let { name, label, icon, content, notify, onShown } = v;\r\n            return {\r\n                name: name,\r\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\r\n                content: content,\r\n                notify: notify,\r\n                onShown: onShown,\r\n            }\r\n        });\r\n        return <Page header={false}>\r\n            <Tabs tabs={faceTabs} />\r\n        </Page>;\r\n    }\r\n}\r\n","import { CSub, CBase } from \"tonva\";\r\nimport { UQs } from \"./uqs\";\r\nimport { CApp } from \"./CApp\";\r\n\r\nexport abstract class CUqBase extends CBase {\r\n    get cApp(): CApp { return this._cApp; }\r\n    protected get uqs(): UQs { return this._uqs as UQs };\r\n}\r\n\r\nexport abstract class CUqSub extends CSub {\r\n    get cApp(): CApp { return this._cApp; }\r\n    protected get uqs(): UQs { return this._uqs as UQs };\r\n    protected get owner(): CUqBase { return this._owner as CUqBase; };\r\n}\r\n","import * as React from 'react';\r\nimport { CHome } from './CHome';\r\nimport { Page, View, SearchBox } from 'tonva';\r\n\r\nexport class VHome extends View<CHome> {\r\n\r\n    async open(param?: any) {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    render(param: any): JSX.Element {\r\n        return <this.page />\r\n    }\r\n\r\n    private page = () => {\r\n        let { onNewSupplier, searchSupplierByKey } = this.controller.cApp.cSupplier;\r\n\r\n        let right = <div className=\"w-19c d-flex\">\r\n            <SearchBox className=\"w-80\"\r\n                size='sm'\r\n                onSearch={(key: string) => searchSupplierByKey(key)}\r\n                placeholder=\"请输入关键字\" />\r\n            <span onClick={() => onNewSupplier()} className=\"fa-stack\">\r\n                <i className=\"fa fa-square fa-stack-2x text-primary\"></i>\r\n                <i className=\"fa fa-plus fa-stack-1x\"></i>\r\n            </span>\r\n        </div>;\r\n        let header = <header className=\"py-2 px-4 text-center text-white\">\r\n            <span className=\"h5 align-middle\" style={{ textAlign: 'center' }}>供应商</span>\r\n        </header>;\r\n        return <Page right={right} header={header} headerClassName=\"bg-primary\">\r\n            <this.content />\r\n        </Page>;\r\n    };\r\n\r\n    private content = () => {\r\n        let { controller } = this;\r\n        let { toSupplierList } = controller;\r\n        return <>\r\n            {toSupplierList()}\r\n        </>\r\n    };\r\n}","import { CUqBase } from '../CBase';\r\nimport { VHome } from './VHome';\r\n\r\nexport class CHome extends CUqBase {\r\n\r\n    async internalStart(param: any) {\r\n\r\n        let { cSupplier } = this.cApp;\r\n        await cSupplier.start();\r\n        this.openVPage(VHome);\r\n    }\r\n\r\n    toSupplierList = () => {\r\n        let { cSupplier } = this.cApp;\r\n        return cSupplier.renderRootList();\r\n    }\r\n    tab = () => this.renderView(VHome);\r\n}","import * as React from 'react';\r\nimport { VPage, Page, UiSchema, UiInputItem, Form, Context } from 'tonva';\r\nimport { Schema } from 'tonva';\r\nimport _ from 'lodash';\r\nimport { CSupplier } from './CSupplier';\r\n\r\nconst schema: Schema = [\r\n    { name: 'id', type: 'id', required: false },\r\n    { name: 'no', type: 'string', required: true },\r\n    { name: 'name', type: 'string', required: true },\r\n    { name: 'abbreviation', type: 'string', required: false },\r\n    { name: 'isValid', type: 'boolean', required: true },\r\n];\r\n\r\nexport class VSupplier extends VPage<CSupplier> {\r\n\r\n    private form: Form;\r\n    private supplierData: any;\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            id: { visible: false },\r\n            no: { widget: 'text', label: '供应商编号', placeholder: '必填' } as UiInputItem,\r\n            name: { widget: 'text', label: '供应商名称', placeholder: '必填' } as UiInputItem,\r\n            abbreviation: { widget: 'text', label: '供应商简称' } as UiInputItem,\r\n            isValid: { widget: 'checkbox', label: '有效', defaultValue: true },\r\n            submit: { widget: 'button', label: '提交' },\r\n        }\r\n    }\r\n\r\n    async open(supplierData: any) {\r\n        this.supplierData = supplierData;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.saveSupplierData(context.form.data);\r\n    }\r\n\r\n    private onSavesupplierData = async () => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private page = () => {\r\n        let descriptionData = _.clone(this.supplierData);\r\n\r\n        let footer: any;\r\n        footer = <button type=\"button\"\r\n            className=\"btn btn-primary w-100\"\r\n            onClick={this.onSavesupplierData}>保存</button>;\r\n\r\n        return <Page header=\"供应商\" footer={footer}>\r\n            <div className=\"p-3 bg-white\">\r\n                <Form ref={v => this.form = v} className=\"m-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    formData={descriptionData}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    fieldLabelSize={3}\r\n                />\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { View, EasyDate, FA, LMR, List, EasyTime, Page } from 'tonva';\r\nimport { CSupplier } from './CSupplier';\r\n\r\nexport class VSupplierList extends View<CSupplier> {\r\n\r\n    private renderRootCategory = (item: any, parent: any) => {\r\n        let { no, name, createTime } = item;\r\n        let { onEditSupplier } = this.controller;\r\n\r\n        let right = <div className=\"p-2 cursor-pointer text-info\" onClick={() => onEditSupplier(item)}>\r\n            <FA name=\"edit\" />\r\n        </div>\r\n        return <LMR right={right} className=\"py-2\">\r\n            <p onClick={() => this.controller.onSupplierSelected(item)}>\r\n                <FA name=\"location-arrow\" className=\"px-2 text-primary\"></FA>\r\n                {no} - {name}\r\n            </p>\r\n        </LMR>\r\n    }\r\n\r\n    render(param: any): JSX.Element {\r\n        return <this.content />\r\n    }\r\n\r\n    private content = observer(() => {\r\n        let { suppliers } = this.controller;\r\n        return <List items={suppliers} item={{ render: this.renderRootCategory }} none=\"目前还没有供应商哦！\" />;\r\n    });\r\n} \r\n","import * as React from 'react';\r\nimport { VPage, Page, FA, EasyDate, tv, LMR, List } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport _ from 'lodash';\r\nimport { CSupplier } from \"./CSupplier\";\r\nimport { SupplierItem } from \"model/supplierItem\";\r\n\r\nexport class VSupplierDetail extends VPage<CSupplier> {\r\n\r\n    private supplier: any;\r\n    private firstSupplierContact: any;\r\n    private supplierContacts: any[] = [];\r\n\r\n    async open(param: SupplierItem) {\r\n        let { parent, item, child } = param;\r\n        this.supplier = parent;\r\n        this.firstSupplierContact = item;\r\n        this.supplierContacts = child;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private getSupplierContact = () => {\r\n        let { showCreateSupplierContact } = this.controller.cApp.cSupplierContact;\r\n\r\n        return <div className=\"bg-white mb-3\">\r\n            <div className=\"cursor-pointer\">\r\n                &nbsp;<FA className=\"align-middle text-warning\" name=\"users\" /><span className=\"h6 py-2 px-1 align-middle\"><b> 供应商联系人</b></span>\r\n            </div>\r\n            {this.firstSupplierContact && <List items={this.supplierContacts} item={{ render: this.renderContact }} />}\r\n            <div className=\"text-primary text-center small bg-white py-2\" onClick={() => showCreateSupplierContact(this.supplier)}>＋联系人</div>\r\n\r\n        </div>\r\n    }\r\n\r\n    private renderContact = (item: any, index: number) => {\r\n        let { delSupplierContact, showEditSupplierContact, showSupplierContactDetail } = this.controller.cApp.cSupplierContact;\r\n        let { no, name, id, gender, mobile } = item;\r\n        let { defaultContact } = this.supplier;\r\n        let fa_text = defaultContact === undefined ? \"px-2 text-muted small\" : (defaultContact.id === id ? \"px-2 text-info small\" : \"px-2 text-muted small\");\r\n        let fa_gender = gender === \"0\" ? <FA name=\"user\" className=\"px-2 text-danger\"></FA> : <FA name=\"user\" className=\"px-2 text-primary\"></FA>;\r\n        let left = <div className={fa_text} onClick={() => showSupplierContactDetail(item)}>\r\n            {fa_gender}\r\n            {no} - {name} - {mobile === undefined ? \"无\" : mobile}</div>\r\n        let right =\r\n            <div className=\"px-2 text-muted text-right samll\">\r\n                <span onClick={() => delSupplierContact(item)}><FA className=\"align-middle text-danger\" name=\"times\" /></span>\r\n                <span onClick={() => showEditSupplierContact(this.supplier, item)}><FA className=\"align-middle p-2 cursor-pointer text-info\" name=\"edit\" /></span>\r\n            </div>;\r\n        return <LMR left={left} right={right} className=\"py-2\">\r\n        </LMR>;\r\n    }\r\n\r\n    private rowTop = () => {\r\n        let supplierData = _.clone(this.supplier);\r\n        let { name, no, abbreviation, createTime } = supplierData;\r\n\r\n        return <div className=\"py-2 bg-white mb-3\">\r\n            <div className=\"cursor-pointer\">\r\n                &nbsp;<FA className=\"align-middle text-warning\" name=\"credit-card\" /><span className=\"h6 py-2 px-1 align-middle\"><b> 供应商基本信息</b></span>\r\n            </div>\r\n            <div className=\"py-2 cat-root-sub small\">\r\n                <div><span className=\"px-4 align-middle\">编号：</span><span className=\"py-2 px-4\">{no}</span></div>\r\n                <div><span className=\"px-4 align-middle \">名称：</span><span className=\"py-2 px-4\">{name}</span></div>\r\n                <div><span className=\"px-4 align-middle \">简称：</span><span className=\"py-2 px-4\">{abbreviation}</span></div>\r\n                <div><p><span className=\"px-4 align-middle \">创建时间：</span><span className=\"py-2\">{<EasyDate date={createTime} />}</span></p></div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n    private page = () => {\r\n\r\n        let header = <header className=\"py-2 text-center text-white\">\r\n            <span className=\"h5 align-middle\">供应商详情</span>\r\n        </header>;\r\n\r\n        return <Page header={header} headerClassName=\"bg-primary\">\r\n            {this.rowTop()}\r\n            {this.getSupplierContact()}\r\n        </Page>\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, List, LMR, SearchBox } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSupplier } from './CSupplier';\r\n\r\nexport class VPickSupplier extends VPage<CSupplier> {\r\n    async open(param?: any) {\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let { suppliers, searchSupplierByKey } = this.controller;\r\n\r\n        let header = <header className=\"py-2 px-4 text-center text-white\">\r\n            <span className=\"h5 align-middle\" style={{ textAlign: 'center' }}>选择供应商</span>\r\n        </header>;\r\n        return <Page header={header} onScrollBottom={this.onScrollBottom} >\r\n            <SearchBox className=\"w-80 mt-1 mr-2\"\r\n                size='sm'\r\n                onSearch={(key: string) => searchSupplierByKey(key)}\r\n                placeholder=\"请输入关键字\" />\r\n            <List items={suppliers} item={{ render: this.renderItem, onClick: this.onClick }} />\r\n        </Page>;\r\n    });\r\n\r\n\r\n    private onScrollBottom = async () => {\r\n        await this.controller.suppliers.more();\r\n    }\r\n\r\n    private onClick = async (model: any) => {\r\n        await this.controller.returnSupplier(model);\r\n        this.closePage();\r\n    }\r\n\r\n    private renderItem = (item: any, index: number) => {\r\n        let { name } = item;\r\n        return <LMR className=\"px-3 py-2 border\" left={name}>\r\n        </LMR >;\r\n    }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport { View, BoxId, Image, PageItems, Query } from 'tonva';\r\nimport { CUqBase } from 'CBase';\r\nimport { nav } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport iconj from '../images/icon.jpg';\r\nimport { VSupplier } from './VSupplier';\r\nimport { VSupplierList } from './VSupplierList';\r\nimport { VHome } from '../VHome';\r\nimport { VSupplierDetail } from './VSupplierDetail';\r\nimport { SupplierItem } from \"model/supplierItem\";\r\nimport { VPickSupplier } from './VPickSupplier';\r\n\r\nclass PageSupplier extends PageItems<any> {\r\n\r\n    private searchSupplier: Query;\r\n    constructor(searchQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 14;\r\n        this.searchSupplier = searchQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchSupplier.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class CSupplier extends CUqBase {\r\n\r\n    @observable suppliers: PageSupplier;\r\n\r\n    async internalStart(param: any) {\r\n        this.searchSupplierByKey(param);\r\n        this.openVPage(VPickSupplier);\r\n    }\r\n\r\n    searchSupplierByKey = async (key: string) => {\r\n        this.suppliers = new PageSupplier(this.uqs.rms.SearchSupplier);\r\n        this.suppliers.first({ key: key });\r\n    }\r\n\r\n    renderRootList() {\r\n        return this.renderView(VSupplierList);\r\n    }\r\n\r\n    saveSupplierData = async (supplier: any) => {\r\n\r\n        if (supplier.id === undefined) {\r\n            supplier.createTime = Date.now();\r\n            supplier.defaultContact = undefined;\r\n            await this.uqs.rms.Supplier.save(undefined, supplier);\r\n        } else {\r\n            await this.uqs.rms.Supplier.save(supplier.id, supplier);\r\n        }\r\n        await this.cApp.cHome.start();\r\n    }\r\n\r\n\r\n    /**\r\n    * 打开新建界面\r\n    */\r\n    onNewSupplier = async () => {\r\n        this.openVPage(VSupplier, { description: undefined });\r\n    }\r\n\r\n    /**\r\n    * 打开编辑界面\r\n    */\r\n    onEditSupplier = async (supplier: any) => {\r\n        this.openVPage(VSupplier, supplier);\r\n    }\r\n\r\n    /**\r\n    * 打开详情界面\r\n    */\r\n    onSupplierSelected = async (supplier: any) => {\r\n        let { id } = supplier;\r\n        let contact = await this.uqs.rms.SearchSupplierContact.query({ _id: id });\r\n        let param: SupplierItem = {\r\n            parent: supplier,\r\n            item: contact.ret[0],\r\n            child: contact.ret,\r\n        }\r\n        this.openVPage(VSupplierDetail, param);\r\n    }\r\n\r\n    returnSupplier = (model: any) => {\r\n        this.returnCall(model);\r\n    }\r\n}\r\n\r\n","\r\nexport function telephoneValidation(value: string) {\r\n    if (value && !/^(\\(\\d{3,4}\\)|\\d{3,4}-|\\s)?\\d{7,14}$/.test(value))\r\n        return \"固定电话格式不正确，请重新输入！\";\r\n    else\r\n        return undefined;\r\n}\r\n\r\nexport function mobileValidation(value: string) {\r\n    if (value && !/^[1][3,4,5,6,7,8,9][0-9]{9}$/.test(value))\r\n        return \"手机号格式不正确，请重新输入！\";\r\n    else\r\n        return undefined;\r\n}\r\n\r\nexport function emailValidation(value: string) {\r\n    if (value && !/\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/.test(value))\r\n        return \"Email格式不正确，请重新输入！\";\r\n    else\r\n        return undefined;\r\n}\r\n\r\nexport function faxValidation(value: string) {\r\n    if (value && !/^(\\(\\d{3,4}\\)|\\d{3,4}-|\\s)?\\d{7,14}$/.test(value))\r\n        return \"传真号码格式不正确，请重新输入！\";\r\n    else\r\n        return undefined;\r\n}\r\n\r\nexport function addressDetailValidation(value: string) {\r\n    return (value && value.length > 200) ? \"详细地址最多200个字！\" : undefined;\r\n}\r\n\r\nexport function zipCodeValidation(value: string) {\r\n    return (value && value.length > 15) ? \"邮编过长，请修改后录入！\" : undefined;\r\n}\r\n\r\n\r\nexport function organizationNameValidation(value: string) {\r\n    return (value && value.length > 100) ? \"单位名称最多100个字！\" : undefined;\r\n}\r\n\r\nexport function departmentNameValidation(value: string) {\r\n    return (value && value.length > 100) ? \"部门名称名称最多100个字！\" : undefined;\r\n}\r\n\r\nexport function salutationValidation(value: string) {\r\n    return (value && value.length > 100) ? \"单位名称最多100个字！\" : undefined;\r\n}\r\n\r\nexport function nameValidation(value: string) {\r\n    return (value && value.length > 50) ? \"姓名最多50个字！\" : undefined;\r\n}","import * as React from 'react';\r\nimport { VPage, Page, BoxId, Form, UiRadio, UiSchema, UiTextItem, UiInputItem, UiIdItem, Schema, Context, tv } from 'tonva';\r\nimport { observer } from 'mobx-react';\r\nimport { CSupplierContact } from './CSupplierContact';\r\nimport { SupplierItem } from \"model/supplierItem\";\r\nimport {\r\n    faxValidation, emailValidation, mobileValidation, telephoneValidation,\r\n    addressDetailValidation, zipCodeValidation, departmentNameValidation,\r\n    salutationValidation, nameValidation\r\n} from 'tools/inputValidations';\r\n\r\nexport class VSupplierContact extends VPage<CSupplierContact> {\r\n    private form: Form;\r\n    private item: any;\r\n    private parent: any;\r\n    async open(param?: SupplierItem) {\r\n        let { item, parent } = param;\r\n        this.item = item;\r\n        this.parent = parent;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private gradeContent = (boxId: any) => {\r\n        return tv(boxId, (values) => {\r\n            let { name } = values;\r\n            return <>{name}</>;\r\n        });\r\n    }\r\n\r\n    private schema: Schema = [\r\n        { name: 'no', type: 'string', required: true },\r\n        { name: 'name', type: 'string', required: true },\r\n        { name: 'gender', type: 'string', required: true },\r\n        { name: 'firstName', type: 'string', required: false },\r\n        { name: 'lastName', type: 'string', required: false },\r\n        { name: 'salutation', type: 'string', required: false },\r\n        { name: 'departmentName', type: 'string', required: false },\r\n        { name: 'telephone', type: 'string', required: false },\r\n        { name: 'mobile', type: 'string', required: true },\r\n        { name: 'wechatId', type: 'string', required: false },\r\n        { name: 'email', type: 'string' },\r\n        { name: 'fax', type: 'string', required: false },\r\n        { name: 'address', type: 'id', required: false },\r\n        { name: 'addressString', type: 'string', required: false },\r\n        { name: 'zipCode', type: 'string', required: false },\r\n        { name: 'isDefault', type: 'boolean', required: false },\r\n    ];\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            no: { widget: 'text', label: '编号', placeholder: '必填' } as UiInputItem,\r\n            name: { widget: 'text', label: '姓名', placeholder: '必填' } as UiInputItem,\r\n            gender: { widget: 'radio', label: '性别', list: [{ value: '1', title: '男' }, { value: '0', title: '女' }] } as UiRadio,\r\n            firstName: { widget: 'text', label: '名', placeholder: '名', rules: nameValidation } as UiInputItem,\r\n            lastName: { widget: 'text', label: '姓氏', placeholder: '姓氏' } as UiInputItem,\r\n            salutation: { widget: 'text', label: '称谓', rules: salutationValidation } as UiTextItem,\r\n            departmentName: { widget: 'text', label: '部门名称', rules: departmentNameValidation } as UiTextItem,\r\n            telephone: { widget: 'text', label: '固定电话', rules: telephoneValidation } as UiTextItem,\r\n            mobile: { widget: 'text', label: '手机号', rules: mobileValidation } as UiTextItem,\r\n            wechatId: { widget: 'text', label: '微信号', } as UiTextItem,\r\n            email: { widget: 'text', label: 'Email', rules: emailValidation, placeholder: 'Email' } as UiTextItem,\r\n            fax: { widget: 'text', label: '传真', rules: faxValidation } as UiTextItem,\r\n            address: {\r\n                widget: 'id', label: '所在地区',\r\n                pickId: async (context: Context, name: string, value: number) => await this.controller.pickAddress(context, name, value),\r\n                Templet: (address: BoxId) => {\r\n                    if (!address) return <small className=\"text-muted\">(无)</small>;\r\n                    return tv(address, (addressValue) => {\r\n                        let { country, province, city, county } = addressValue;\r\n                        /* 下面这种在使用tv之前的一堆判断应该是tv或者什么的有bug, 应该让Henry改改 */\r\n                        return <>\r\n                            {country !== undefined && country.id !== undefined && tv(country, v => <>{v.chineseName}</>)}\r\n                            {province !== undefined && province.id !== undefined && tv(province, (v) => <>{v.chineseName}</>)}\r\n                            {city !== undefined && city.id !== undefined && tv(city, (v) => <>{v.chineseName}</>)}\r\n                            {county !== undefined && county.id !== undefined && tv(county, (v) => <>{v.chineseName}</>)}\r\n                        </>;\r\n                    }, () => {\r\n                        return <small className=\"text-muted\">请选择地区</small>;\r\n                    })\r\n                }\r\n            } as UiIdItem,\r\n            addressString: { widget: 'text', label: '详细地址', rules: addressDetailValidation } as UiTextItem,\r\n            zipCode: { widget: 'text', label: '邮编', rules: zipCodeValidation } as UiTextItem,\r\n            isDefault: { widget: 'checkbox', label: '默认联系人', defaultValue: false },\r\n            submit: { widget: 'button', label: '提交' }\r\n        }\r\n    };\r\n\r\n    private onSaveSupplierContact = async () => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        let { saveSupplierContact } = this.controller;\r\n        let id = this.item && this.item.id;\r\n        await saveSupplierContact(id, context.form.data, this.parent);\r\n        this.closePage();\r\n    }\r\n\r\n    private page = observer(() => {\r\n\r\n        let footer = <div className=\"d-flex\">\r\n            <div className=\"flex-grow-1 justify-content-end\">\r\n                <button type=\"button\" className=\"btn btn-primary mr-3 px-6\" onClick={this.onSaveSupplierContact} ><span className=\"px-4\">保存</span></button>\r\n            </div>\r\n        </div>;\r\n\r\n        return <Page header=\"添加联系人\" footer={footer} >\r\n            <Form ref={v => this.form = v} className=\"my-3 mx-3\"\r\n                formData={this.item}\r\n                schema={this.schema}\r\n                uiSchema={this.uiSchema}\r\n                onButtonClick={this.onFormButtonClick}\r\n                requiredFlag={true}\r\n            />\r\n        </Page>;\r\n    })\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { FA, Page, VPage } from \"tonva\";\r\nimport _ from 'lodash';\r\nimport { CSupplierContact } from \"./CSupplierContact\";\r\n\r\nexport class VSupplierContactDetail extends VPage<CSupplierContact> {\r\n\r\n    private supplierContact: any;\r\n\r\n    async open(supplierContact: any) {\r\n        this.supplierContact = supplierContact;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private page = () => {\r\n        let supplierContactData = _.clone(this.supplierContact);\r\n        let { no, name, firstName, lastName, gender, salutation, departmentName, telephone, mobile, email, fax, zipCode, wechatId, addressString, address } = supplierContactData;\r\n\r\n        let header = <header className=\"py-2 text-center text-white\">\r\n            <span className=\"h5 align-middle\">供应商联系人详情</span>\r\n        </header>;\r\n\r\n        return <Page header={header} headerClassName=\"bg-primary\">\r\n            <div className=\"py-2 bg-white mb-3\">\r\n                <div className=\"cursor-pointer\">\r\n                    &nbsp;<FA className=\"align-middle text-warning\" name=\"credit-card\" /><span className=\"h6 py-2 px-1 align-middle\"><b> 供应商联系人基本信息</b></span>\r\n                </div>\r\n                <div className=\"py-2 cat-root-sub\">\r\n                    <div><span className=\"px-4 align-middle\">编号：</span><span className=\"py-2 px-4\">{no}</span></div>\r\n                    <div><span className=\"px-4 align-middle \">名称：</span><span className=\"py-2 px-4\">{name}</span></div>\r\n                    <div><span className=\"px-4 align-middle \">姓氏：</span><span className=\"py-2 px-4\">{lastName}</span></div>\r\n                    <div><span className=\"px-4 align-middle \">&nbsp;&nbsp;&nbsp;名：</span><span className=\"py-2 px-4\">{firstName}</span></div>\r\n                    <div><span className=\"px-4 align-middle\">性别：</span><span className=\"py-2 px-4\">{gender === \"0\" ? \"女\" : \"男\"}</span></div>\r\n                    <div><span className=\"px-4 align-middle \">称谓：</span><span className=\"py-2 px-4\">{salutation}</span></div>\r\n                    <div><span className=\"px-4 align-middle \">部门名称：</span><span className=\"py-2\">{departmentName}</span></div>\r\n                    <div><span className=\"px-4 align-middle\">固定电话：</span><span className=\"py-2 px-2\">{telephone}</span></div>\r\n                    <div><span className=\"px-4 align-middle\">手机号：</span><span className=\"py-2 px-4\">{mobile}</span></div>\r\n                    <div><span className=\"px-4 align-middle \">微信号：</span><span className=\"py-2 px-4\">{wechatId}</span></div>\r\n                    <div><span className=\"px-4 align-middle\">Email：</span><span className=\"py-2 px-4\">{email}</span></div>\r\n                    <div><span className=\"px-4 align-middle \">传真：</span><span className=\"py-2 px-4\">{fax}</span></div>\r\n                    <div><span className=\"px-4 align-middle \">所在地区：</span><span className=\"py-2 px-2\">{address}</span></div>\r\n                    <div><span className=\"px-4 align-middle\">详细地址：</span><span className=\"py-2 px-2\">{addressString}</span></div>\r\n                    <div><span className=\"px-4 align-middle \">邮编：</span><span className=\"py-2 px-4\">{zipCode}</span></div>\r\n                </div>\r\n            </div>\r\n        </Page >\r\n    }\r\n}","import { AppConfig } from \"tonva\";\r\nimport { tvs } from \"./tvs\";\r\nimport AnalyticalChemistry from './images/AnalyticalChemistry.png';\r\nimport LabSupplies from './images/LabSupplies.png';\r\nimport LifeScience from './images/LifeScience.png';\r\nimport MaterialScience from './images/MaterialScience.png';\r\nimport OrganicChemistry from './images/OrganicChemistry.png';\r\n\r\nexport const appConfig: AppConfig = {\r\n    appName: '百灵威系统工程部/rms',\r\n    version: '1.0.1',\r\n    tvs: tvs,\r\n    oem: '百灵威'\r\n};\r\n// 生产配置\r\nexport const GLOABLE = {\r\n    CHINA: 44,\r\n    TIPDISPLAYTIME: 2000\r\n}","import { TVs } from \"tonva\";\r\n\r\nexport const tvs:TVs = {\r\n\r\n}","import * as React from 'react';\r\nimport { VPage, Page, BoxId } from 'tonva';\r\nimport { tv } from 'tonva';\r\nimport { List, FA } from 'tonva';\r\nimport { CAddress } from './CAddress';\r\nimport { GLOABLE } from 'configuration';\r\n\r\nexport class VAddress extends VPage<CAddress> {\r\n    private provinceId: number;\r\n    private cityId: number;\r\n    private countyId: number;\r\n    private backLevel = 0;\r\n\r\n    async open(param: any) {\r\n        let provinces = await this.controller.getCountryProvince(GLOABLE.CHINA);\r\n        this.openPage(this.page, { provinces: provinces });\r\n    }\r\n\r\n    private page = (param: any) => {\r\n        this.backLevel++;\r\n        return <Page header=\"选择所在省市\">\r\n            <div className=\"row no-gutters\">\r\n                {param.provinces.map((v: any) => this.renderPCC(v.province, this.onProvinceClick))}\r\n            </div>\r\n        </Page>\r\n    }\r\n\r\n    private renderPCC = (pcc: BoxId, onClick: any) => {\r\n        return <div key={pcc.id} className=\"col-6 col-md-4 col-lg-3 cursor-pointer\">\r\n            {tv(pcc, (value) => {\r\n                let { id, chineseName } = value;\r\n                return <>\r\n                    <div className=\"pt-1 pb-1 px-2\" onClick={() => onClick(id)}\r\n                        style={{ border: '1px solid #eeeeee', marginRight: '-1px', marginBottom: '-1px' }}\r\n                    >\r\n                        <span className=\"ml-1 align-middle\">\r\n                            <FA name=\"chevron-right\" className=\"text-info small\" />\r\n                            &nbsp; {chineseName}\r\n                        </span>\r\n                    </div>\r\n                </>;\r\n            })}\r\n        </div>\r\n    }\r\n\r\n    private onProvinceClick = async (provinceId: any) => {\r\n        this.provinceId = provinceId;\r\n        let cities = await this.controller.getProvinceCities(provinceId);\r\n        if (cities) {\r\n            let len = cities.length;\r\n            if (len === 1) {\r\n                await this.onCityClick(cities[0].city.id);\r\n                return;\r\n            }\r\n            if (len > 1) {\r\n                this.backLevel++;\r\n                this.openPageElement(<Page header=\"选择所在城市\">\r\n                    <div className=\"row no-gutters\">\r\n                        {cities.map(v => this.renderPCC(v.city, this.onCityClick))}\r\n                    </div>\r\n                </Page>);\r\n                return;\r\n            }\r\n        } else {\r\n            this.closePage(this.backLevel);\r\n            this.saveAddress();\r\n        }\r\n    }\r\n\r\n    private onCityClick = async (cityId: any) => {\r\n        this.cityId = cityId;\r\n        let counties = await this.controller.getCityCounties(cityId);\r\n        if (counties && counties.length > 0) {\r\n            this.backLevel++;\r\n            this.openPageElement(<Page header=\"选择所在区县\">\r\n                <div className=\"row no-gutters\">\r\n                    {counties.map(v => this.renderPCC(v.county, this.onCountyClick))}\r\n                </div>\r\n            </Page>);\r\n        } else {\r\n            this.closePage(this.backLevel);\r\n            this.saveAddress();\r\n        }\r\n    }\r\n\r\n    private onCountyClick = async (countyId: any) => {\r\n        this.countyId = countyId;\r\n        this.closePage(this.backLevel);\r\n        this.saveAddress();\r\n    }\r\n\r\n    private saveAddress = async () => {\r\n        await this.controller.saveAddress(GLOABLE.CHINA, this.provinceId, this.cityId, this.countyId);\r\n    }\r\n}\r\n","import { VAddress } from './VAddress';\r\nimport { CUqBase } from 'CBase';\r\n\r\nexport class CAddress extends CUqBase {\r\n    protected async internalStart() {\r\n        this.openVPage(VAddress);\r\n    }\r\n\r\n    getCountryProvince = async (countryId: number): Promise<any[]> => {\r\n        return await this.uqs.common.GetCountryProvinces.table({ country: countryId });\r\n    }\r\n\r\n    getProvinceCities = async (provinceId: number): Promise<any[]> => {\r\n        return await this.uqs.common.GetProvinceCities.table({ province: provinceId });\r\n    }\r\n\r\n    getCityCounties = async (cityId: number): Promise<any[]> => {\r\n        return await this.uqs.common.GetCityCounties.table({ city: cityId });\r\n    }\r\n\r\n    saveAddress = async (countryId: number, provinceId: number, cityId?: number, countyId?: number): Promise<any> => {\r\n        let { Address } = this.uqs.common;\r\n        let newAddress = await Address.save(undefined, { country: countryId, province: provinceId, city: cityId, county: countyId });\r\n        let addressId = newAddress && Address.boxId(newAddress.id);\r\n        this.returnCall(addressId);\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { View, BoxId, Image, Query, PageItems, Context } from 'tonva';\r\nimport { CUqBase } from 'CBase';\r\nimport { nav } from 'tonva';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { VSupplierContact } from \"./VSupplierContact\";\r\nimport { VSupplierContactDetail } from \"./VSupplierContactDetail\";\r\nimport { VSupplierDetail } from \"../supplier/VSupplierDetail\";\r\nimport { SupplierItem } from \"model/supplierItem\";\r\nimport { CAddress } from \"./CAddress\";\r\n\r\nclass PageSupplierContact extends PageItems<any> {\r\n    private searchSupplierContact: Query;\r\n    constructor(searchQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 14;\r\n        this.searchSupplierContact = searchQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchSupplierContact.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class CSupplierContact extends CUqBase {\r\n\r\n    @observable pageSupplierContact: PageSupplierContact;\r\n    protected async internalStart() {\r\n    }\r\n\r\n    searchSupplierContactByKey = async (parent: any, key: string) => {\r\n        this.pageSupplierContact = new PageSupplierContact(await this.uqs.rms.SearchSupplierContact.query({ _id: parent.id }));\r\n        this.pageSupplierContact.first({ key: key });\r\n    }\r\n\r\n    pickAddress = async (context: Context, name: string, value: number): Promise<number> => {\r\n        let cAddress = this.newC(CAddress); // new CAddress(this.cApp, undefined);\r\n        return await cAddress.call<number>();\r\n    }\r\n\r\n    //添加联系人\r\n    showCreateSupplierContact = (model: any) => {\r\n        let param: SupplierItem = {\r\n            parent: model,\r\n            item: undefined,\r\n            child: undefined,\r\n        }\r\n        this.openVPage(VSupplierContact, param);\r\n    }\r\n\r\n    showEditSupplierContact = async (parent: any, model: any) => {\r\n        let param: SupplierItem = {\r\n            parent: parent,\r\n            item: model,\r\n            child: model,\r\n        }\r\n        this.openVPage(VSupplierContact, param);\r\n    }\r\n\r\n    showSupplierContactDetail = async (model: any) => {\r\n        this.openVPage(VSupplierContactDetail, model);\r\n    }\r\n\r\n    saveSupplierContact = async (id: number, param: any, parent: any) => {\r\n        let { no, name, firstName, lastName, gender, salutation, departmentName, telephone, mobile, email, fax, zipCode, wechatId, addressString, address, isDefault } = param;\r\n        let parrm = { no: no, name: name, firstName: firstName, lastName: lastName, gender: gender, salutation: salutation, departmentName: departmentName, telephone: telephone, mobile: mobile, email: email, fax: fax, zipCode: zipCode, wechatId: wechatId, addressString: addressString, address: address, supplier: parent.id, isValid: 1 };\r\n        let result = await this.uqs.rms.SupplierContact.save(id, parrm);\r\n        if (isDefault === true) {\r\n            let sid = id;\r\n            if (sid === undefined) {\r\n                sid = result.id;\r\n            }\r\n            await this.uqs.rms.Supplier.save(parent.id, { no: parent.no, name: parent.name, abbreviation: parent.abbreviation, createTime: parent.createTime, isValid: 1, defaultContact: sid });\r\n        }\r\n        this.cApp.cHome.start();\r\n    }\r\n\r\n    delSupplierContact = async (model: any) => {\r\n        let { id, no, name, firstName, lastName, isDefault, isValid, supplier, gender, salutation, departmentName, telephone, mobile, email, fax, zipCode, wechatId, addressString, address } = model;\r\n        await this.uqs.rms.SupplierContact.save(id, { no: no, name: name, firstName: firstName, lastName: lastName, supplier: supplier, gender: gender, salutation: salutation, departmentName: departmentName, telephone: telephone, mobile: mobile, email: email, fax: fax, zipCode: zipCode, wechatId: wechatId, addressString: addressString, address: address, isDefault: isDefault, isValid: 0 });\r\n    }\r\n\r\n    loadList = async (parent: any) => {\r\n        await this.cApp.cSupplier.onSupplierSelected(parent);\r\n    }\r\n\r\n    //联系人列表\r\n    showSupplierContact = async (model: any) => {\r\n        let { id } = model;\r\n        let item = await this.uqs.rms.SearchSupplierContact.query({ _id: id });\r\n        let child = item.ret.length > 0 ? item.ret : undefined;\r\n        let param: SupplierItem = {\r\n            parent: undefined,\r\n            item: item.ret[0],\r\n            child: child,\r\n        }\r\n        this.openVPage(VSupplierDetail, param);\r\n    }\r\n}","import * as React from 'react';\r\nimport { VPage, Page, UiSchema, UiInputItem, Form, Context, UiIdItem, tv } from 'tonva';\r\nimport { Schema } from 'tonva';\r\nimport _ from 'lodash';\r\nimport { CProduct } from './CProduct';\r\n\r\nconst schema: Schema = [\r\n    { name: 'id', type: 'id', required: false },\r\n    { name: 'no', type: 'string', required: true },\r\n    { name: 'supplier', type: 'id', required: true },\r\n    { name: 'origin', type: 'string', required: false },\r\n    { name: 'description', type: 'string', required: false },\r\n    { name: 'descriptionC', type: 'string', required: false },\r\n    { name: 'isTrue', type: 'boolean', required: true },\r\n];\r\n\r\nexport class VProduct extends VPage<CProduct> {\r\n\r\n    private form: Form;\r\n    private productData: any;\r\n\r\n    private uiSchema: UiSchema = {\r\n        items: {\r\n            id: { visible: false },\r\n            no: { widget: 'text', label: '产品编号', placeholder: '必填' } as UiInputItem,\r\n            supplier: {\r\n                widget: 'id', label: '供应商', placeholder: '请选择供应商',\r\n                pickId: async (context: Context, name: string, value: number) => await this.controller.pickSupplier(context, name, value),\r\n                Templet: (item: any) => {\r\n                    let { obj } = item;\r\n                    if (!obj) return <small className=\"text-muted\">请选择供应商</small>;\r\n                    return <>\r\n                        {tv(obj, v => <>{v.name}</>)}\r\n                    </>;\r\n                }\r\n            } as UiIdItem,\r\n            origin: { widget: 'text', label: '供应商自编号' } as UiInputItem,\r\n            description: { widget: 'text', label: '英文名称' } as UiInputItem,\r\n            descriptionC: { widget: 'text', label: '中文名称' } as UiInputItem,\r\n            isTrue: { widget: 'checkbox', label: '有效', defaultValue: true },\r\n            submit: { widget: 'button', label: '提交' },\r\n        }\r\n    }\r\n\r\n    async open(productData: any) {\r\n        this.productData = productData;\r\n        this.openPage(this.page);\r\n    }\r\n\r\n    private onFormButtonClick = async (name: string, context: Context) => {\r\n        await this.controller.saveProductData(context.form.data);\r\n    }\r\n\r\n    private onSaveProductData = async () => {\r\n        if (!this.form) return;\r\n        await this.form.buttonClick(\"submit\");\r\n    }\r\n\r\n    private page = () => {\r\n        let descriptionData = _.clone(this.productData);\r\n\r\n        let footer: any;\r\n        footer = <button type=\"button\"\r\n            className=\"btn btn-primary w-100\"\r\n            onClick={this.onSaveProductData}>保存</button>;\r\n\r\n        return <Page header=\"产品\" footer={footer}>\r\n            <div className=\"p-3 bg-white\">\r\n                <Form ref={v => this.form = v} className=\"m-3\"\r\n                    schema={schema}\r\n                    uiSchema={this.uiSchema}\r\n                    formData={descriptionData}\r\n                    onButtonClick={this.onFormButtonClick}\r\n                    fieldLabelSize={3}\r\n                />\r\n            </div>\r\n        </Page>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { View, EasyDate, FA, LMR, List, EasyTime, Page, VPage, SearchBox } from 'tonva';\r\nimport { CProduct } from './CProduct';\r\n\r\nexport class VProductList extends VPage<CProduct> {\r\n\r\n    async open(param?: any) {\r\n    }\r\n\r\n    render() {\r\n        return <this.page />\r\n    }\r\n\r\n    private renderRootCategory = (item: any, parent: any) => {\r\n        let { no, description, createTime } = item;\r\n        let { onEditProduct } = this.controller;\r\n\r\n        let right = <div className=\"p-2 cursor-pointer text-info\" onClick={() => onEditProduct(item)}>\r\n            <FA name=\"edit\" />\r\n        </div>\r\n        return <LMR right={right} className=\"py-2\">\r\n            <p>\r\n                <FA name=\"location-arrow\" className=\"px-2 text-primary\"></FA>\r\n                {no} - {description}\r\n            </p>\r\n        </LMR>\r\n    }\r\n\r\n    private page = observer(() => {\r\n        let { products, onNewProduct, searchProductByKey } = this.controller;\r\n\r\n        let right = <div className=\"w-19c d-flex\">\r\n            <SearchBox className=\"w-80\"\r\n                size='sm'\r\n                onSearch={(key: string) => searchProductByKey(key)}\r\n                placeholder=\"请输入关键字\" />\r\n            <span onClick={() => onNewProduct()} className=\"fa-stack\">\r\n                <i className=\"fa fa-square fa-stack-2x text-primary\"></i>\r\n                <i className=\"fa fa-plus fa-stack-1x\"></i>\r\n            </span>\r\n        </div>;\r\n        let header = <header className=\"py-2 px-2 text-center text-white\">\r\n            <span className=\"h5 align-middle\" style={{ textAlign: 'center' }}>产品</span>\r\n        </header>;\r\n        return <Page header={header} right={right} onScrollBottom={this.onScrollBottom} headerClassName=\"bg-primary\">\r\n            <List items={products} item={{ render: this.renderRootCategory }} none=\"目前还没有产品哦！\" />\r\n        </Page>;\r\n    })\r\n\r\n    private onScrollBottom = async () => {\r\n        await this.controller.products.more();\r\n    }\r\n}","import * as React from 'react';\r\nimport { View, BoxId, Image, PageItems, Query, Context } from 'tonva';\r\nimport { CUqBase } from 'CBase';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { VProduct } from './VProduct';\r\nimport { VProductList } from './VProductList';\r\nimport { CSupplier } from 'information/supplier/CSupplier';\r\n\r\nclass PageProduct extends PageItems<any> {\r\n\r\n    private searchProduct: Query;\r\n    constructor(searchQuery: Query) {\r\n        super();\r\n        this.firstSize = this.pageSize = 14;\r\n        this.searchProduct = searchQuery;\r\n    }\r\n\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        if (pageStart === undefined) pageStart = 0;\r\n        let ret = await this.searchProduct.page(param, pageStart, pageSize);\r\n        return ret;\r\n    }\r\n    protected setPageStart(item: any): any {\r\n        this.pageStart = item === undefined ? 0 : item.id;\r\n    }\r\n}\r\n\r\nexport class CProduct extends CUqBase {\r\n\r\n    @observable products: PageProduct;\r\n\r\n    async internalStart(param: any) {\r\n        this.searchProductByKey(param);\r\n        this.openVPage(VProductList);\r\n    }\r\n\r\n    searchProductByKey = async (key: string) => {\r\n        this.products = new PageProduct(this.uqs.rms.SearchProduct);\r\n        this.products.first({ key: key });\r\n    }\r\n\r\n    pickSupplier = async (context: Context, name: string, value: number): Promise<number> => {\r\n        let cSupplier = this.newC(CSupplier);\r\n        return await cSupplier.call<number>();\r\n    }\r\n\r\n    saveProductData = async (product: any) => {\r\n\r\n        if (product.id === undefined) {\r\n            product.createTime = Date.now();\r\n            product.defaultContact = undefined;\r\n            await this.uqs.rms.Product.save(undefined, product);\r\n        } else {\r\n            await this.uqs.rms.Product.save(product.id, product);\r\n        }\r\n        await this.searchProductByKey(\"\");\r\n    }\r\n\r\n    /**\r\n    * 打开新建界面\r\n    */\r\n    onNewProduct = async () => {\r\n        this.openVPage(VProduct, { description: undefined });\r\n    }\r\n\r\n    /**\r\n    * 打开编辑界面\r\n    */\r\n    onEditProduct = async (product: any) => {\r\n        this.openVPage(VProduct, product);\r\n    }\r\n\r\n    loadList = async () => {\r\n        await this.searchProductByKey(\"\");\r\n    }\r\n\r\n    render = observer(() => {\r\n        return this.renderView(VProductList);\r\n    })\r\n\r\n    tab = () => {\r\n        return <this.render />;\r\n    }\r\n}","import { CAppBase, IConstructor, User, nav } from \"tonva\";\r\nimport { UQs } from \"./uqs\";\r\nimport { CUqBase } from \"./CBase\";\r\nimport { VMain } from './ui/main';\r\nimport { CHome } from \"./information/CHome\";\r\nimport { CSupplier } from \"./information/supplier/CSupplier\";\r\nimport { CSupplierContact } from \"./information/supplierContact/CSupplierContact\";\r\nimport { CProduct } from \"./information/product/CProduct\";\r\n\r\n\r\nexport class CApp extends CAppBase {\r\n    get uqs(): UQs { return this._uqs as UQs };\r\n\r\n    topKey: any;\r\n    cHome: CHome;\r\n    cSupplier: CSupplier;\r\n    cSupplierContact: CSupplierContact;\r\n    cProduct: CProduct;\r\n\r\n    protected newC<T extends CUqBase>(type: IConstructor<T>): T {\r\n        return new type(this);\r\n    }\r\n\r\n    protected async internalStart() {\r\n\r\n        this.cHome = this.newC(CHome);\r\n        this.cSupplier = this.newC(CSupplier);\r\n        this.cProduct = this.newC(CProduct);\r\n        this.cSupplierContact = this.newC(CSupplierContact);\r\n        let promises: PromiseLike<void>[] = [];\r\n        promises.push(this.cSupplier.start());\r\n        await Promise.all(promises);\r\n        this.showMain();\r\n        this.topKey = nav.topKey();\r\n    }\r\n\r\n    showMain(initTabName?: string) {\r\n        this.openVPage(VMain, initTabName);\r\n    }\r\n    async loginCallBack(user: User) {\r\n\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport './App.css';\r\nimport { NavView, nav, start } from 'tonva';\r\nimport { CApp } from './CApp';\r\nimport { appConfig } from './configuration';\r\n\r\nnav.setSettings(appConfig);\r\n\r\nclass App extends React.Component {\r\n\r\n  private onLogined = async () => {\r\n    await start(CApp, appConfig);\r\n  }\r\n  public render() {\r\n    return <NavView onLogined={this.onLogined} notLogined={this.onLogined} />\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}